{"version":3,"sources":["variables/ICICITrainedChart.js","variables/KotakTrainedChart.js","variables/JindalTrainedChart.js","variables/JSWTrainedChart.js","variables/TATASTEELTrainedChart.js","variables/JMTTrainedChart.js","variables/MarutiTrainedChart.js","variables/TATAMOTORSTrainedChart.js","components/Navbar.js","components/ChartCard.js","components/PreTrainedCharts.js","views/MainLayout.js","views/Homepage.js","components/SearchBar.js","views/Requestpage.js","variables/sampleData.js","views/DetailsPage.js","App.js","serviceWorker.js","index.js","assets/img/homepage.svg","variables/AxisTrainedCharts.js"],"names":["ICICIBankJson","require","ICICIPredJson","color1Data","slice","color2Data","unshift","NaN","ICICIBankDates","map","object","ICICIBankAverage","Math","round","ICICIBankChart2","data","canvas","gradientStroke","getContext","createLinearGradient","addColorStop","labels","datasets","label","fill","backgroundColor","borderColor","borderWidth","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","options","maintainAspectRatio","legend","display","elements","point","radius","tooltips","titleFontColor","bodyFontColor","bodySpacing","xPadding","mode","intersect","position","responsive","scales","yAxes","barPercentage","gridLines","ticks","suggestedMin","suggestedMax","padding","fontColor","xAxes","ICICIBankChart","drawBorder","color","zeroLineColor","ICICICurrPrice","length","module","exports","KotakBankJson","KotakPredJson","KotakBankDates","KotakBankAverage","KotakBankChart2","KotakBankChart","KotakCurrPrice","JindalBankJson","JindalPredJson","JindalBankDates","JindalBankAverage","JindalBankChart2","JindalBankChart","JindalCurrPrice","JSWBankJson","JSWPredJson","JSWBankDates","JSWBankAverage","JSWBankChart2","JSWBankChart","JSWCurrPrice","TATASTEELJson","TATASTEELPredJson","TATASTEELDates","TATASTEELAverage","TATASTEEKBankChart2","TATASTEELChart","TATASTEELCurrPrice","JMTJson","JMTPredJson","JMTDates","JMTAverage","JMTSTEELChart2","JMTSTEELChart","JMTCurrPrice","MarutiJson","MarutiPredJson","MarutiDates","MarutiAverage","MarutiChart2","MarutiChart","MarutiCurrPrice","TATAMOTORSJson","TATAMOTORSPredJson","TATAMOTORSDates","TATAMOTORSAverage","TATAMOTORSChart2","TATAMOTORSChart","TATAMOTORSCurrPrice","console","log","Navbar","className","href","viewBox","xmlns","fillRule","d","clipRule","class","to","onClick","window","location","replace","stroke","strokeLinecap","strokeLinejoin","strokeWidth","ChartCard","style","height","this","props","name","symbol","price","React","Component","Tabs","useState","openTab","setOpenTab","role","e","preventDefault","data-toggle","id","AxisBankChart","AxisCurrPrice","PreTrainedCharts","MainLayout","HomePage","src","Img1","alt","width","SearchBar","state","activeOption","filteredOptions","showOptions","userInput","onChange","suggestions","DummyData","currentTarget","value","filter","optionName","toLowerCase","indexOf","setState","innerText","onKeyDown","keyCode","suggestionList","index","key","Fragment","type","placeholder","x-model","sampleData","chart1","chart2","AxisBankChart2","currPrice","DetailsPage","useParams","findIndex","chart1data","chart1options","chart2data","chart2options","App","basename","process","path","render","exact","from","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","AxisBankJson","AxisPredJson","AxisBankDates","AxisBankAverage"],"mappings":"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","file":"static/js/main.71734bbf.chunk.js","sourcesContent":["var ICICIBankJson = require('./ICICIBANK_old_1_year.json');\nvar ICICIPredJson = require('./pred/icici_pred.json');\n\nvar color1Data = ICICIPredJson[\"values\"].slice(0,11);\n// color1Data.push(NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,)\nvar color2Data = ICICIPredJson[\"values\"].slice(10,20);\ncolor2Data.unshift(NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN);\n\nvar ICICIBankDates = ICICIBankJson.map(function(object){\n    return object[\"Date\"]\n    \n})\n\nvar ICICIBankAverage = ICICIBankJson.map(function(object){\n    return Math.round(object[\"Average\"]*100)/100\n    \n})\n\nconst ICICIBankChart2 = {\n  data: canvas => {\n      let ctx = canvas.getContext(\"2d\");\n\n      let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n      gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\n      gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); \n      gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); \n\n      return{\n          labels: [\"20 Apr\",\"21 Apr\",\"22 Apr\",\"23 Apr\",\"24 Apr\",\"25 Apr\",\"26 Apr\",\"27 Apr\",\"28 Apr\",\"29 Apr\",\"30 Apr\",\"1 May\",\"2 May\",\"3 May\",\"4 May\",\"5 May\",\"6 May\",\"7 May\",\"8 May\",\"9 May\",],\n          datasets: [\n              {\n                label: \"Axis Bank Average Unit\",\n                fill: true,\n                backgroundColor: gradientStroke,\n                borderColor: \"#00d6b4\",\n                borderWidth: 2,\n                borderDash: [],\n                borderDashOffset: 0.0,\n                pointBackgroundColor: \"#00d6b4\",\n                pointBorderColor: \"rgba(255,255,255,0)\",\n                pointHoverBackgroundColor: \"#00d6b4\",\n                pointBorderWidth: 1,\n                pointHoverRadius: 4,\n                pointHoverBorderWidth: 15,\n                pointRadius: 0,\n                data: color1Data\n              },\n              {\n                label: \"Predicted Values\",\n                fill: true,\n                backgroundColor: gradientStroke,\n                borderColor: \"#f76d05\",\n                borderWidth: 2,\n                borderDash: [],\n                borderDashOffset: 0.0,\n                pointBackgroundColor: \"#f76d05\",\n                pointBorderColor: \"rgba(247, 109, 5, 1)\",\n                pointHoverBackgroundColor: \"#1f8ef1\",\n                pointBorderWidth: 20,\n                pointHoverRadius: 4,\n                pointHoverBorderWidth: 15,\n                pointRadius: 0,\n                data: color2Data\n              }\n            ]\n      };\n  },\n  options: {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      elements: {\n        point:{\n            radius: 0\n        }\n      },\n      tooltips: {\n        backgroundColor: \"#f5f5f5\",\n        titleFontColor: \"#333\",\n        bodyFontColor: \"#666\",\n        bodySpacing: 4,\n        xPadding: 12,\n        mode: \"nearest\",\n        intersect: 0,\n        position: \"nearest\"\n      },\n      responsive: true,\n      scales: {\n        yAxes: [\n          {\n            barPercentage: 1.6,\n            gridLines: {\n              display:false,\n              // drawBorder: false,\n              // color: \"rgba(29,140,248,0.0)\",\n              // zeroLineColor: \"transparent\"\n            },\n            ticks: {\n              suggestedMin: 340,\n              suggestedMax: 420,\n              padding: 20,\n              fontColor: \"#9e9e9e\"\n            }\n          }\n        ],\n  \n        xAxes: [\n          {\n            barPercentage: 1.6,\n            gridLines: {\n              display: false,\n              // drawBorder: false,\n              // color: \"rgba(0,242,195,0.1)\",\n              // zeroLineColor: \"transparent\"\n            },\n            ticks: {\n              padding: 20,\n              fontColor: \"#9e9e9e\"\n            }\n          }\n        ]\n      }\n    }\n}\n\nconst ICICIBankChart = {\n    data: canvas => {\n      let ctx = canvas.getContext(\"2d\");\n  \n      let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n  \n      gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n      gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n      gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n  \n      return {\n        labels: ICICIBankDates,\n        datasets: [\n          {\n            label: \"Data\",\n            fill: true,\n            backgroundColor: gradientStroke,\n            borderColor: \"#1f8ef1\",\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: \"#1f8ef1\",\n            pointBorderColor: \"rgba(255,255,255,0)\",\n            pointHoverBackgroundColor: \"#1f8ef1\",\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 0,\n            data: ICICIBankAverage\n          }\n        ]\n      };\n    },\n    options: {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        tooltips: {\n          backgroundColor: \"#f5f5f5\",\n          titleFontColor: \"#333\",\n          bodyFontColor: \"#666\",\n          bodySpacing: 4,\n          xPadding: 12,\n          mode: \"nearest\",\n          intersect: 0,\n          position: \"nearest\"\n        },\n        responsive: true,\n        scales: {\n          yAxes: [\n            {\n              barPercentage: 1.6,\n              gridLines: {\n                drawBorder: false,\n                color: \"rgba(29,140,248,0.0)\",\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                suggestedMin: 400,\n                suggestedMax: 400,\n                padding: 20,\n                fontColor: \"#9a9a9a\"\n              }\n            }\n          ],\n          xAxes: [\n            {\n              barPercentage: 1.6,\n              gridLines: {\n                display: 0,\n                drawBorder: false,\n                color: \"rgba(29,140,248,0.1)\",\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                padding: 20,\n                fontColor: \"#9a9a9a\"\n              }\n            }\n          ]\n        }\n      }\n}\n\nconst ICICICurrPrice = Math.round(ICICIBankJson[ICICIBankJson.length-1][\"Average\"]*100)/100;\n\n\n\n\nmodule.exports = {\n    ICICIBankChart,\n    ICICIBankChart2,\n    ICICICurrPrice\n};","var KotakBankJson = require('./KOTAKBANK_data_old_1_year.json');\nvar KotakPredJson = require('./pred/kotak_pred.json');\n\nvar color1Data = KotakPredJson[\"values\"].slice(0,11);\n// color1Data.push(NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,)\nvar color2Data = KotakPredJson[\"values\"].slice(10,20);\ncolor2Data.unshift(NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN);\n\nvar KotakBankDates = KotakBankJson.map(function(object){\n    return object[\"Date\"]\n    \n})\n\nvar KotakBankAverage = KotakBankJson.map(function(object){\n    return Math.round(object[\"Average\"]*100)/100\n    \n})\n\nconst KotakBankChart2 = {\n  data: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\"20 Apr\",\"21 Apr\",\"22 Apr\",\"23 Apr\",\"24 Apr\",\"25 Apr\",\"26 Apr\",\"27 Apr\",\"28 Apr\",\"29 Apr\",\"30 Apr\",\"1 May\",\"2 May\",\"3 May\",\"4 May\",\"5 May\",\"6 May\",\"7 May\",\"8 May\",\"9 May\",],\n      datasets: [\n        {\n          label: \"Data\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 0,\n          data: color1Data\n        },\n        {\n          label: \"Predicted Values\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#f76d05\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#f76d05\",\n          pointBorderColor: \"rgba(247, 109, 5, 1)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 0,\n          data: color2Data\n        }\n        \n\n      ]\n    };\n  },\n  options: {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      tooltips: {\n        backgroundColor: \"#f5f5f5\",\n        titleFontColor: \"#333\",\n        bodyFontColor: \"#666\",\n        bodySpacing: 4,\n        xPadding: 12,\n        mode: \"nearest\",\n        intersect: 0,\n        position: \"nearest\"\n      },\n      responsive: true,\n      scales: {\n        yAxes: [\n          {\n            barPercentage: 1.6,\n            gridLines: {\n              drawBorder: false,\n              color: \"rgba(29,140,248,0.0)\",\n              zeroLineColor: \"transparent\"\n            },\n            ticks: {\n              suggestedMin: 1370,\n              suggestedMax: 1420,\n              padding: 20,\n              fontColor: \"#9a9a9a\"\n            }\n          }\n        ],\n        xAxes: [\n          {\n            barPercentage: 1.6,\n            gridLines: {\n              display: 0,\n              drawBorder: false,\n              color: \"rgba(29,140,248,0.1)\",\n              zeroLineColor: \"transparent\"\n            },\n            ticks: {\n              padding: 20,\n              fontColor: \"#9a9a9a\"\n            }\n          }\n        ]\n      }\n    }\n}\n\nconst KotakBankChart = {\n    data: canvas => {\n        let ctx = canvas.getContext(\"2d\");\n\n        let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n        gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\n        gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); \n        gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); \n\n        return{\n            labels: KotakBankDates,\n            datasets: [\n                {\n                  label: \"My First dataset\",\n                  fill: true,\n                  backgroundColor: gradientStroke,\n                  borderColor: \"#00d6b4\",\n                  borderWidth: 2,\n                  borderDash: [],\n                  borderDashOffset: 0.0,\n                  pointBackgroundColor: \"#00d6b4\",\n                  pointBorderColor: \"rgba(255,255,255,0)\",\n                  pointHoverBackgroundColor: \"#00d6b4\",\n                  pointBorderWidth: 1,\n                  pointHoverRadius: 4,\n                  pointHoverBorderWidth: 15,\n                  pointRadius: 0,\n                  data: KotakBankAverage\n                }\n              ]\n        };\n    },\n    options: {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        elements: {\n          point:{\n              radius: 0\n          }\n        },\n        tooltips: {\n          backgroundColor: \"#f5f5f5\",\n          titleFontColor: \"#333\",\n          bodyFontColor: \"#666\",\n          bodySpacing: 4,\n          xPadding: 12,\n          mode: \"nearest\",\n          intersect: 0,\n          position: \"nearest\"\n        },\n        responsive: true,\n        scales: {\n          yAxes: [\n            {\n              barPercentage: 1.6,\n              gridLines: {\n                drawBorder: false,\n                color: \"rgba(29,140,248,0.0)\",\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                suggestedMin: 600,\n                suggestedMax: 1400,\n                padding: 20,\n                fontColor: \"#9e9e9e\"\n              }\n            }\n          ],\n    \n          xAxes: [\n            {\n              barPercentage: 1.6,\n              gridLines: {\n                display: 0,\n                drawBorder: false,\n                color: \"rgba(0,242,195,0.1)\",\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                padding: 20,\n                fontColor: \"#9e9e9e\"\n              }\n            }\n          ]\n        }\n      }\n}\n\n\nconst KotakCurrPrice  = Math.round(KotakBankJson[KotakBankJson.length-1][\"Average\"]*100)/100;\n\n\nmodule.exports = {\n    KotakBankChart,\n    KotakBankChart2,\n    KotakCurrPrice\n};\n\n\n\n\n\n\n","var JindalBankJson = require('./JINDALSTEL_data_old_1_year.json');\nvar JindalPredJson = require('./pred/jindal_pred.json');\n\nvar color1Data = JindalPredJson[\"values\"].slice(0,11);\n// color1Data.push(NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,)\nvar color2Data = JindalPredJson[\"values\"].slice(10,20);\ncolor2Data.unshift(NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN);\n\nvar JindalBankDates = JindalBankJson.map(function(object){\n    return object[\"Date\"]\n    \n})\n\nvar JindalBankAverage = JindalBankJson.map(function(object){\n    return Math.round(object[\"Average\"]*100)/100\n    \n})\n\nconst JindalBankChart2 = {\n  data: canvas => {\n      let ctx = canvas.getContext(\"2d\");\n\n      let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n      gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\n      gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); \n      gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); \n\n      return{\n          labels: [\"20 Apr\",\"21 Apr\",\"22 Apr\",\"23 Apr\",\"24 Apr\",\"25 Apr\",\"26 Apr\",\"27 Apr\",\"28 Apr\",\"29 Apr\",\"30 Apr\",\"1 May\",\"2 May\",\"3 May\",\"4 May\",\"5 May\",\"6 May\",\"7 May\",\"8 May\",\"9 May\",],\n          datasets: [\n              {\n                label: \"Axis Bank Average Unit\",\n                fill: true,\n                backgroundColor: gradientStroke,\n                borderColor: \"#00d6b4\",\n                borderWidth: 2,\n                borderDash: [],\n                borderDashOffset: 0.0,\n                pointBackgroundColor: \"#00d6b4\",\n                pointBorderColor: \"rgba(255,255,255,0)\",\n                pointHoverBackgroundColor: \"#00d6b4\",\n                pointBorderWidth: 1,\n                pointHoverRadius: 4,\n                pointHoverBorderWidth: 15,\n                pointRadius: 0,\n                data: color1Data\n              },\n              {\n                label: \"Predicted Values\",\n                fill: true,\n                backgroundColor: gradientStroke,\n                borderColor: \"#f76d05\",\n                borderWidth: 2,\n                borderDash: [],\n                borderDashOffset: 0.0,\n                pointBackgroundColor: \"#f76d05\",\n                pointBorderColor: \"rgba(247, 109, 5, 1)\",\n                pointHoverBackgroundColor: \"#1f8ef1\",\n                pointBorderWidth: 20,\n                pointHoverRadius: 4,\n                pointHoverBorderWidth: 15,\n                pointRadius: 0,\n                data: color2Data\n              }\n            ]\n      };\n  },\n  options: {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      elements: {\n        point:{\n            radius: 0\n        }\n      },\n      tooltips: {\n        backgroundColor: \"#f5f5f5\",\n        titleFontColor: \"#333\",\n        bodyFontColor: \"#666\",\n        bodySpacing: 4,\n        xPadding: 12,\n        mode: \"nearest\",\n        intersect: 0,\n        position: \"nearest\"\n      },\n      responsive: true,\n      scales: {\n        yAxes: [\n          {\n            barPercentage: 1.6,\n            gridLines: {\n              display:false,\n              // drawBorder: false,\n              // color: \"rgba(29,140,248,0.0)\",\n              // zeroLineColor: \"transparent\"\n            },\n            ticks: {\n              suggestedMin: 150,\n              suggestedMax: 170,\n              padding: 20,\n              fontColor: \"#9e9e9e\"\n            }\n          }\n        ],\n  \n        xAxes: [\n          {\n            barPercentage: 1.6,\n            gridLines: {\n              display: false,\n              // drawBorder: false,\n              // color: \"rgba(0,242,195,0.1)\",\n              // zeroLineColor: \"transparent\"\n            },\n            ticks: {\n              padding: 20,\n              fontColor: \"#9e9e9e\"\n            }\n          }\n        ]\n      }\n    }\n}\n\nconst JindalBankChart = {\n    data: canvas => {\n      let ctx = canvas.getContext(\"2d\");\n  \n      let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n  \n      gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n      gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n      gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n  \n      return {\n        labels: JindalBankDates,\n        datasets: [\n          {\n            label: \"Data\",\n            fill: true,\n            backgroundColor: gradientStroke,\n            borderColor: \"#1f8ef1\",\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: \"#1f8ef1\",\n            pointBorderColor: \"rgba(255,255,255,0)\",\n            pointHoverBackgroundColor: \"#1f8ef1\",\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 0,\n            data: JindalBankAverage\n          }\n        ]\n      };\n    },\n    options: {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        tooltips: {\n          backgroundColor: \"#f5f5f5\",\n          titleFontColor: \"#333\",\n          bodyFontColor: \"#666\",\n          bodySpacing: 4,\n          xPadding: 12,\n          mode: \"nearest\",\n          intersect: 0,\n          position: \"nearest\"\n        },\n        responsive: true,\n        scales: {\n          yAxes: [\n            {\n              barPercentage: 1.6,\n              gridLines: {\n                drawBorder: false,\n                color: \"rgba(29,140,248,0.0)\",\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                suggestedMin: 100,\n                suggestedMax: 250,\n                padding: 20,\n                fontColor: \"#9a9a9a\"\n              }\n            }\n          ],\n          xAxes: [\n            {\n              barPercentage: 1.6,\n              gridLines: {\n                display: 0,\n                drawBorder: false,\n                color: \"rgba(29,140,248,0.1)\",\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                padding: 20,\n                fontColor: \"#9a9a9a\"\n              }\n            }\n          ]\n        }\n      }\n}\n\n\nconst JindalCurrPrice  = Math.round(JindalBankJson[JindalBankJson.length-1][\"Average\"]*100)/100;\n\n\n\n\nmodule.exports = {\n  JindalBankChart,\n    JindalBankChart2,\n    JindalCurrPrice\n};\n\n\n\n\n\n","var JSWBankJson = require('./JSWSTEEL_data_old_1_year.json');\nvar JSWPredJson = require('./pred/jsw_pred.json');\n\nvar color1Data = JSWPredJson[\"values\"].slice(0,11);\n// color1Data.push(NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,)\nvar color2Data = JSWPredJson[\"values\"].slice(10,20);\ncolor2Data.unshift(NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN);\n\n\n\nvar JSWBankDates = JSWBankJson.map(function(object){\n    return object[\"Date\"]\n    \n})\n\nvar JSWBankAverage = JSWBankJson.map(function(object){\n    return Math.round(object[\"Average\"]*100)/100\n    \n})\n\nconst JSWBankChart2 = {\n  data: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\"20 Apr\",\"21 Apr\",\"22 Apr\",\"23 Apr\",\"24 Apr\",\"25 Apr\",\"26 Apr\",\"27 Apr\",\"28 Apr\",\"29 Apr\",\"30 Apr\",\"1 May\",\"2 May\",\"3 May\",\"4 May\",\"5 May\",\"6 May\",\"7 May\",\"8 May\",\"9 May\",],\n      datasets: [\n        {\n          label: \"Data\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 0,\n          data: color1Data\n        },\n        {\n          label: \"Predicted Values\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#f76d05\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#f76d05\",\n          pointBorderColor: \"rgba(247, 109, 5, 1)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 0,\n          data: color2Data\n        }\n      ]\n    };\n  },\n  options: {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      tooltips: {\n        backgroundColor: \"#f5f5f5\",\n        titleFontColor: \"#333\",\n        bodyFontColor: \"#666\",\n        bodySpacing: 4,\n        xPadding: 12,\n        mode: \"nearest\",\n        intersect: 0,\n        position: \"nearest\"\n      },\n      responsive: true,\n      scales: {\n        yAxes: [\n          {\n            barPercentage: 1.6,\n            gridLines: {\n              drawBorder: false,\n              color: \"rgba(29,140,248,0.0)\",\n              zeroLineColor: \"transparent\"\n            },\n            ticks: {\n              suggestedMin: 260,\n              suggestedMax: 320,\n              padding: 20,\n              fontColor: \"#9a9a9a\"\n            }\n          }\n        ],\n        xAxes: [\n          {\n            barPercentage: 1.6,\n            gridLines: {\n              drawBorder: false,\n              color: \"rgba(29,140,248,0.1)\",\n              zeroLineColor: \"transparent\"\n            },\n            ticks: {\n              padding: 20,\n              fontColor: \"#9a9a9a\"\n            }\n          }\n        ]\n      }\n    }\n}\n\n\nconst JSWBankChart = {\n    data: canvas => {\n        let ctx = canvas.getContext(\"2d\");\n\n        let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n        gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\n        gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); \n        gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); \n\n        return{\n            labels: JSWBankDates,\n            datasets: [\n                {\n                  label: \"My First dataset\",\n                  fill: true,\n                  backgroundColor: gradientStroke,\n                  borderColor: \"#00d6b4\",\n                  borderWidth: 2,\n                  borderDash: [],\n                  borderDashOffset: 0.0,\n                  pointBackgroundColor: \"#00d6b4\",\n                  pointBorderColor: \"rgba(255,255,255,0)\",\n                  pointHoverBackgroundColor: \"#00d6b4\",\n                  pointBorderWidth: 1,\n                  pointHoverRadius: 4,\n                  pointHoverBorderWidth: 15,\n                  pointRadius: 0,\n                  data: JSWBankAverage\n                }\n              ]\n        };\n    },\n    options: {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        elements: {\n          point:{\n              radius: 0\n          }\n        },\n        tooltips: {\n          backgroundColor: \"#f5f5f5\",\n          titleFontColor: \"#333\",\n          bodyFontColor: \"#666\",\n          bodySpacing: 4,\n          xPadding: 12,\n          mode: \"nearest\",\n          intersect: 0,\n          position: \"nearest\"\n        },\n        responsive: true,\n        scales: {\n          yAxes: [\n            {\n              barPercentage: 1.6,\n              gridLines: {\n                drawBorder: false,\n                color: \"rgba(29,140,248,0.0)\",\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                suggestedMin: 250,\n                suggestedMax: 450,\n                padding: 20,\n                fontColor: \"#9e9e9e\"\n              }\n            }\n          ],\n    \n          xAxes: [\n            {\n              barPercentage: 1.6,\n              gridLines: {\n                display: 0,\n                drawBorder: false,\n                color: \"rgba(0,242,195,0.1)\",\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                padding: 20,\n                fontColor: \"#9e9e9e\"\n              }\n            }\n          ]\n        }\n      }\n}\n\n\nconst JSWCurrPrice  = Math.round(JSWBankJson[JSWBankJson.length-1][\"Average\"]*100)/100;\n\n\n\n\nmodule.exports = {\n    JSWBankChart,\n    JSWBankChart2,\n    JSWCurrPrice\n};\n\n\n\n\n","var TATASTEELJson = require('./TATASTEEL_data_old_1_year.json');\nvar TATASTEELPredJson = require('./pred/tatasteel_pred.json');\n\nvar color1Data = TATASTEELPredJson[\"values\"].slice(0,11);\n// color1Data.push(NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,)\nvar color2Data = TATASTEELPredJson[\"values\"].slice(10,20);\ncolor2Data.unshift(NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN);\n\nvar TATASTEELDates = TATASTEELJson.map(function(object){\n    return object[\"Date\"]\n    \n})\n\nvar TATASTEELAverage = TATASTEELJson.map(function(object){\n    return Math.round(object[\"Average\"]*100)/100\n    \n})\n\nconst TATASTEEKBankChart2 = {\n  data: canvas => {\n      let ctx = canvas.getContext(\"2d\");\n\n      let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n      gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\n      gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); \n      gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); \n\n      return{\n          labels: [\"20 Apr\",\"21 Apr\",\"22 Apr\",\"23 Apr\",\"24 Apr\",\"25 Apr\",\"26 Apr\",\"27 Apr\",\"28 Apr\",\"29 Apr\",\"30 Apr\",\"1 May\",\"2 May\",\"3 May\",\"4 May\",\"5 May\",\"6 May\",\"7 May\",\"8 May\",\"9 May\",],\n          datasets: [\n              {\n                label: \"Axis Bank Average Unit\",\n                fill: true,\n                backgroundColor: gradientStroke,\n                borderColor: \"#00d6b4\",\n                borderWidth: 2,\n                borderDash: [],\n                borderDashOffset: 0.0,\n                pointBackgroundColor: \"#00d6b4\",\n                pointBorderColor: \"rgba(255,255,255,0)\",\n                pointHoverBackgroundColor: \"#00d6b4\",\n                pointBorderWidth: 1,\n                pointHoverRadius: 4,\n                pointHoverBorderWidth: 15,\n                pointRadius: 0,\n                data: color1Data\n              },\n              {\n                label: \"Predicted Values\",\n                fill: true,\n                backgroundColor: gradientStroke,\n                borderColor: \"#f76d05\",\n                borderWidth: 2,\n                borderDash: [],\n                borderDashOffset: 0.0,\n                pointBackgroundColor: \"#f76d05\",\n                pointBorderColor: \"rgba(247, 109, 5, 1)\",\n                pointHoverBackgroundColor: \"#1f8ef1\",\n                pointBorderWidth: 20,\n                pointHoverRadius: 4,\n                pointHoverBorderWidth: 15,\n                pointRadius: 0,\n                data: color2Data\n              }\n            ]\n      };\n  },\n  options: {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      elements: {\n        point:{\n            radius: 0\n        }\n      },\n      tooltips: {\n        backgroundColor: \"#f5f5f5\",\n        titleFontColor: \"#333\",\n        bodyFontColor: \"#666\",\n        bodySpacing: 4,\n        xPadding: 12,\n        mode: \"nearest\",\n        intersect: 0,\n        position: \"nearest\"\n      },\n      responsive: true,\n      scales: {\n        yAxes: [\n          {\n            barPercentage: 1.6,\n            gridLines: {\n              display:false,\n              // drawBorder: false,\n              // color: \"rgba(29,140,248,0.0)\",\n              // zeroLineColor: \"transparent\"\n            },\n            ticks: {\n              suggestedMin: 580,\n              suggestedMax: 450,\n              padding: 20,\n              fontColor: \"#9e9e9e\"\n            }\n          }\n        ],\n  \n        xAxes: [\n          {\n            barPercentage: 1.6,\n            gridLines: {\n              display: false,\n              // drawBorder: false,\n              // color: \"rgba(0,242,195,0.1)\",\n              // zeroLineColor: \"transparent\"\n            },\n            ticks: {\n              padding: 20,\n              fontColor: \"#9e9e9e\"\n            }\n          }\n        ]\n      }\n    }\n}\n\nconst TATASTEELChart = {\n    data: canvas => {\n      let ctx = canvas.getContext(\"2d\");\n  \n      let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n  \n      gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n      gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n      gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n  \n      return {\n        labels: TATASTEELDates,\n        datasets: [\n          {\n            label: \"Data\",\n            fill: true,\n            backgroundColor: gradientStroke,\n            borderColor: \"#1f8ef1\",\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: \"#1f8ef1\",\n            pointBorderColor: \"rgba(255,255,255,0)\",\n            pointHoverBackgroundColor: \"#1f8ef1\",\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 0,\n            data: TATASTEELAverage\n          }\n        ]\n      };\n    },\n    options: {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        tooltips: {\n          backgroundColor: \"#f5f5f5\",\n          titleFontColor: \"#333\",\n          bodyFontColor: \"#666\",\n          bodySpacing: 4,\n          xPadding: 12,\n          mode: \"nearest\",\n          intersect: 0,\n          position: \"nearest\"\n        },\n        responsive: true,\n        scales: {\n          yAxes: [\n            {\n              barPercentage: 1.6,\n              gridLines: {\n                drawBorder: false,\n                color: \"rgba(29,140,248,0.0)\",\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                suggestedMin: 450,\n                suggestedMax: 600,\n                padding: 20,\n                fontColor: \"#9a9a9a\"\n              }\n            }\n          ],\n          xAxes: [\n            {\n              barPercentage: 1.6,\n              gridLines: {\n                display: 0,\n                drawBorder: false,\n                color: \"rgba(29,140,248,0.1)\",\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                padding: 20,\n                fontColor: \"#9a9a9a\"\n              }\n            }\n          ]\n        }\n      }\n}\n\n\n\nconst  TATASTEELCurrPrice  = Math.round(TATASTEELJson[TATASTEELJson.length-1][\"Average\"]*100)/100;\n\n\nmodule.exports = {\n    TATASTEELChart,\n    TATASTEEKBankChart2,\n    TATASTEELCurrPrice\n};\n\n\n\n\n","var JMTJson = require('./JMTAUTOLTD_data_old_1_year.json');\nvar JMTPredJson = require('./pred/jmt_pred.json');\n\nvar color1Data = JMTPredJson[\"values\"].slice(0,11);\n// color1Data.push(NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,)\nvar color2Data = JMTPredJson[\"values\"].slice(10,20);\ncolor2Data.unshift(NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN);\n\nvar JMTDates = JMTJson.map(function(object){\n    return object[\"Date\"]\n    \n})\n\nvar JMTAverage = JMTJson.map(function(object){\n    return Math.round(object[\"Average\"]*100)/100\n    \n})\n\nconst JMTSTEELChart2 = {\n  data: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\"20 Apr\",\"21 Apr\",\"22 Apr\",\"23 Apr\",\"24 Apr\",\"25 Apr\",\"26 Apr\",\"27 Apr\",\"28 Apr\",\"29 Apr\",\"30 Apr\",\"1 May\",\"2 May\",\"3 May\",\"4 May\",\"5 May\",\"6 May\",\"7 May\",\"8 May\",\"9 May\",],\n      datasets: [\n        {\n          label: \"Data\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 0,\n          data: color1Data\n        },\n        {\n          label: \"Predicted Values\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#f76d05\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#f76d05\",\n          pointBorderColor: \"rgba(247, 109, 5, 1)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 0,\n          data: color2Data\n        }\n      ]\n    };\n  },\n  options: {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      tooltips: {\n        backgroundColor: \"#f5f5f5\",\n        titleFontColor: \"#333\",\n        bodyFontColor: \"#666\",\n        bodySpacing: 4,\n        xPadding: 12,\n        mode: \"nearest\",\n        intersect: 0,\n        position: \"nearest\"\n      },\n      responsive: true,\n      scales: {\n        yAxes: [\n          {\n            barPercentage: 1.6,\n            gridLines: {\n              drawBorder: false,\n              color: \"rgba(29,140,248,0.0)\",\n              zeroLineColor: \"transparent\"\n            },\n            ticks: {\n              suggestedMin: 1.9,\n              suggestedMax: 2.3,\n              padding: 20,\n              fontColor: \"#9a9a9a\"\n            }\n          }\n        ],\n        xAxes: [\n          {\n            barPercentage: 1.6,\n            gridLines: {\n              drawBorder: false,\n              color: \"rgba(29,140,248,0.1)\",\n              zeroLineColor: \"transparent\"\n            },\n            ticks: {\n              padding: 20,\n              fontColor: \"#9a9a9a\"\n            }\n          }\n        ]\n      }\n    }\n}\n\nconst JMTSTEELChart = {\n    data: canvas => {\n        let ctx = canvas.getContext(\"2d\");\n\n        let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n        gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\n        gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); \n        gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); \n\n        return{\n            labels:JMTDates,\n            datasets: [\n                {\n                  label: \"My First dataset\",\n                  fill: true,\n                  backgroundColor: gradientStroke,\n                  borderColor: \"#00d6b4\",\n                  borderWidth: 2,\n                  borderDash: [],\n                  borderDashOffset: 0.0,\n                  pointBackgroundColor: \"#00d6b4\",\n                  pointBorderColor: \"rgba(255,255,255,0)\",\n                  pointHoverBackgroundColor: \"#00d6b4\",\n                  pointBorderWidth: 1,\n                  pointHoverRadius: 4,\n                  pointHoverBorderWidth: 15,\n                  pointRadius: 0,\n                  data: JMTAverage\n                }\n              ]\n        };\n    },\n    options: {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        tooltips: {\n          backgroundColor: \"#f5f5f5\",\n          titleFontColor: \"#333\",\n          bodyFontColor: \"#666\",\n          bodySpacing: 4,\n          xPadding: 12,\n          mode: \"nearest\",\n          intersect: 0,\n          position: \"nearest\"\n        },\n        responsive: true,\n        scales: {\n          yAxes: [\n            {\n              barPercentage: 1.6,\n              gridLines: {\n                drawBorder: false,\n                color: \"rgba(29,140,248,0.0)\",\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                suggestedMin: 1.8,\n                suggestedMax: 5,\n                padding: 20,\n                fontColor: \"#9a9a9a\"\n              }\n            }\n          ],\n          xAxes: [\n            {\n              barPercentage: 1.6,\n              gridLines: {\n                display: 0,\n                drawBorder: false,\n                color: \"rgba(29,140,248,0.1)\",\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                padding: 20,\n                fontColor: \"#9a9a9a\"\n              }\n            }\n          ]\n        }\n      }\n}\n\n\nconst JMTCurrPrice  = Math.round(JMTJson[JMTJson.length-1][\"Average\"]*100)/100;\n\n\n\n\nmodule.exports = {\n    JMTSTEELChart,\n    JMTSTEELChart2,\n    JMTCurrPrice\n};\n\n\n\n\n\n\n","var MarutiJson = require('./MARUTI_data_old_1_year');\nvar MarutiPredJson = require('./pred/maruti_pred.json');\n\nvar color1Data = MarutiPredJson[\"values\"].slice(0,11);\n// color1Data.push(NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,)\nvar color2Data = MarutiPredJson[\"values\"].slice(10,20);\ncolor2Data.unshift(NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN);\n\n\n\nvar MarutiDates = MarutiJson.map(function(object){\n    return object[\"Date\"]\n    \n})\n\nvar MarutiAverage = MarutiJson.map(function(object){\n    return Math.round(object[\"Average\"]*100)/100\n    \n})\n\nconst MarutiChart2 = {\n  data: canvas => {\n      let ctx = canvas.getContext(\"2d\");\n\n      let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n      gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\n      gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); \n      gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); \n\n      return{\n          labels: [\"20 Apr\",\"21 Apr\",\"22 Apr\",\"23 Apr\",\"24 Apr\",\"25 Apr\",\"26 Apr\",\"27 Apr\",\"28 Apr\",\"29 Apr\",\"30 Apr\",\"1 May\",\"2 May\",\"3 May\",\"4 May\",\"5 May\",\"6 May\",\"7 May\",\"8 May\",\"9 May\",],\n          datasets: [\n              {\n                label: \"Axis Bank Average Unit\",\n                fill: true,\n                backgroundColor: gradientStroke,\n                borderColor: \"#00d6b4\",\n                borderWidth: 2,\n                borderDash: [],\n                borderDashOffset: 0.0,\n                pointBackgroundColor: \"#00d6b4\",\n                pointBorderColor: \"rgba(255,255,255,0)\",\n                pointHoverBackgroundColor: \"#00d6b4\",\n                pointBorderWidth: 1,\n                pointHoverRadius: 4,\n                pointHoverBorderWidth: 15,\n                pointRadius: 0,\n                data: color1Data\n              },\n              {\n                label: \"Predicted Values\",\n                fill: true,\n                backgroundColor: gradientStroke,\n                borderColor: \"#f76d05\",\n                borderWidth: 2,\n                borderDash: [],\n                borderDashOffset: 0.0,\n                pointBackgroundColor: \"#f76d05\",\n                pointBorderColor: \"rgba(247, 109, 5, 1)\",\n                pointHoverBackgroundColor: \"#1f8ef1\",\n                pointBorderWidth: 20,\n                pointHoverRadius: 4,\n                pointHoverBorderWidth: 15,\n                pointRadius: 0,\n                data: color2Data\n              }\n            ]\n      };\n  },\n  options: {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      elements: {\n        point:{\n            radius: 0\n        }\n      },\n      tooltips: {\n        backgroundColor: \"#f5f5f5\",\n        titleFontColor: \"#333\",\n        bodyFontColor: \"#666\",\n        bodySpacing: 4,\n        xPadding: 12,\n        mode: \"nearest\",\n        intersect: 0,\n        position: \"nearest\"\n      },\n      responsive: true,\n      scales: {\n        yAxes: [\n          {\n            barPercentage: 1.6,\n            gridLines: {\n              display:false,\n              // drawBorder: false,\n              // color: \"rgba(29,140,248,0.0)\",\n              // zeroLineColor: \"transparent\"\n            },\n            ticks: {\n              suggestedMin: 6500,\n              suggestedMax: 6800,\n              padding: 20,\n              fontColor: \"#9e9e9e\"\n            }\n          }\n        ],\n  \n        xAxes: [\n          {\n            barPercentage: 1.6,\n            gridLines: {\n              display: false,\n              // drawBorder: false,\n              // color: \"rgba(0,242,195,0.1)\",\n              // zeroLineColor: \"transparent\"\n            },\n            ticks: {\n              padding: 20,\n              fontColor: \"#9e9e9e\"\n            }\n          }\n        ]\n      }\n    }\n}\n\n\nconst MarutiChart = {\n    data: canvas => {\n      let ctx = canvas.getContext(\"2d\");\n  \n      let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n  \n      gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n      gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n      gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n  \n      return {\n        labels: MarutiDates,\n        datasets: [\n          {\n            label: \"Data\",\n            fill: true,\n            backgroundColor: gradientStroke,\n            borderColor: \"#1f8ef1\",\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: \"#1f8ef1\",\n            pointBorderColor: \"rgba(255,255,255,0)\",\n            pointHoverBackgroundColor: \"#1f8ef1\",\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 0,\n            data: MarutiAverage\n          }\n        ]\n      };\n    },\n    options: {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        tooltips: {\n          backgroundColor: \"#f5f5f5\",\n          titleFontColor: \"#333\",\n          bodyFontColor: \"#666\",\n          bodySpacing: 4,\n          xPadding: 12,\n          mode: \"nearest\",\n          intersect: 0,\n          position: \"nearest\"\n        },\n        responsive: true,\n        scales: {\n          yAxes: [\n            {\n              barPercentage: 1.6,\n              gridLines: {\n                drawBorder: false,\n                color: \"rgba(29,140,248,0.0)\",\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                suggestedMin: 6000,\n                suggestedMax: 10000,\n                padding: 20,\n                fontColor: \"#9a9a9a\"\n              }\n            }\n          ],\n          xAxes: [\n            {\n              barPercentage: 1.6,\n              gridLines: {\n                display: 0,\n                drawBorder: false,\n                color: \"rgba(29,140,248,0.1)\",\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                padding: 20,\n                fontColor: \"#9a9a9a\"\n              }\n            }\n          ]\n        }\n      }\n}\n\nconst  MarutiCurrPrice  = Math.round(MarutiJson[MarutiJson.length-1][\"Average\"]*100)/100;\n\n\nmodule.exports = {\n    MarutiChart,\n    MarutiChart2,\n    MarutiCurrPrice\n};\n","var TATAMOTORSJson = require('./TATAMOTORS_data_old_1_year.json');\nvar TATAMOTORSPredJson = require('./pred/tatamotors_pred.json');\n\nvar color1Data = TATAMOTORSPredJson[\"values\"].slice(0,11);\n// color1Data.push(NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,)\nvar color2Data = TATAMOTORSPredJson[\"values\"].slice(10,20);\ncolor2Data.unshift(NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN);\n\nvar TATAMOTORSDates = TATAMOTORSJson.map(function(object){\n    return object[\"Date\"]\n    \n})\n\nvar TATAMOTORSAverage = TATAMOTORSJson.map(function(object){\n    return Math.round(object[\"Average\"]*100)/100\n    \n})\n\nconst TATAMOTORSChart2 = {\n  data: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\"20 Apr\",\"21 Apr\",\"22 Apr\",\"23 Apr\",\"24 Apr\",\"25 Apr\",\"26 Apr\",\"27 Apr\",\"28 Apr\",\"29 Apr\",\"30 Apr\",\"1 May\",\"2 May\",\"3 May\",\"4 May\",\"5 May\",\"6 May\",\"7 May\",\"8 May\",\"9 May\",],\n      datasets: [\n        {\n          label: \"Data\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 0,\n          data: color1Data\n        },\n        {\n          label: \"Predicted Values\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#f76d05\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#f76d05\",\n          pointBorderColor: \"rgba(247, 109, 5, 1)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 0,\n          data: color2Data\n        }\n      ]\n    };\n  },\n  options: {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      tooltips: {\n        backgroundColor: \"#f5f5f5\",\n        titleFontColor: \"#333\",\n        bodyFontColor: \"#666\",\n        bodySpacing: 4,\n        xPadding: 12,\n        mode: \"nearest\",\n        intersect: 0,\n        position: \"nearest\"\n      },\n      responsive: true,\n      scales: {\n        yAxes: [\n          {\n            barPercentage: 1.6,\n            gridLines: {\n              drawBorder: false,\n              color: \"rgba(29,140,248,0.0)\",\n              zeroLineColor: \"transparent\"\n            },\n            ticks: {\n              suggestedMin: 170,\n              suggestedMax: 215,\n              padding: 20,\n              fontColor: \"#9a9a9a\"\n            }\n          }\n        ],\n        xAxes: [\n          {\n            barPercentage: 1.6,\n            gridLines: {\n              drawBorder: false,\n              color: \"rgba(29,140,248,0.1)\",\n              zeroLineColor: \"transparent\"\n            },\n            ticks: {\n              padding: 20,\n              fontColor: \"#9a9a9a\"\n            }\n          }\n        ]\n      }\n    }\n}\n\nconst TATAMOTORSChart = {\n    data: canvas => {\n        let ctx = canvas.getContext(\"2d\");\n\n        let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n        gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\n        gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); \n        gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); \n\n        return{\n            labels:TATAMOTORSDates,\n            datasets: [\n                {\n                  label: \"My First dataset\",\n                  fill: true,\n                  backgroundColor: gradientStroke,\n                  borderColor: \"#00d6b4\",\n                  borderWidth: 2,\n                  borderDash: [],\n                  borderDashOffset: 0.0,\n                  pointBackgroundColor: \"#00d6b4\",\n                  pointBorderColor: \"rgba(255,255,255,0)\",\n                  pointHoverBackgroundColor: \"#00d6b4\",\n                  pointBorderWidth: 1,\n                  pointHoverRadius: 4,\n                  pointHoverBorderWidth: 15,\n                  pointRadius: 0,\n                  data: TATAMOTORSAverage\n                }\n              ]\n        };\n    },\n    options: {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        elements: {\n          point:{\n              radius: 0\n          }\n        },\n        tooltips: {\n          backgroundColor: \"#f5f5f5\",\n          titleFontColor: \"#333\",\n          bodyFontColor: \"#666\",\n          bodySpacing: 4,\n          xPadding: 12,\n          mode: \"nearest\",\n          intersect: 0,\n          position: \"nearest\"\n        },\n        responsive: true,\n        scales: {\n          yAxes: [\n            {\n              barPercentage: 1.6,\n              gridLines: {\n                drawBorder: false,\n                color: \"rgba(29,140,248,0.0)\",\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                suggestedMin: 200,\n                suggestedMax: 600,\n                padding: 20,\n                fontColor: \"#9e9e9e\"\n              }\n            }\n          ],\n    \n          xAxes: [\n            {\n              barPercentage: 1.6,\n              gridLines: {\n                display: 0,\n                drawBorder: false,\n                color: \"rgba(0,242,195,0.1)\",\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                padding: 20,\n                fontColor: \"#9e9e9e\"\n              }\n            }\n          ]\n        }\n      }\n}\n\n\nconst  TATAMOTORSCurrPrice  = Math.round(TATAMOTORSJson[TATAMOTORSJson.length-1][\"Average\"]*100)/100;\n\nconsole.log(TATAMOTORSCurrPrice)\n\nmodule.exports = {\n    TATAMOTORSChart,\n    TATAMOTORSChart2,\n    TATAMOTORSCurrPrice\n};\n\n\n","import React from 'react';\nimport {Link} from 'react-router-dom'\n\nconst Navbar = () => {\n\n    const redirect = () => {\n        window.location.replace('https://github.com/karannandwani/Hacksprint_PS5_Segmentation-Fault.git')\n    }\n\n   return(\n    <header className=\"text-gray-700 body-font\">\n        <div className=\"container mx-auto flex flex-wrap p-5 flex-col md:flex-row items-center\">\n            <a className=\"flex title-font font-medium items-center text-gray-900 mb-4 md:mb-0\" href='/'>\n                <svg className=\"w-10 h-10 p-2 text-white bg-blue-700 rounded-full\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fillRule=\"evenodd\" d=\"M3 3a1 1 0 000 2v8a2 2 0 002 2h2.586l-1.293 1.293a1 1 0 101.414 1.414L10 15.414l2.293 2.293a1 1 0 001.414-1.414L12.414 15H15a2 2 0 002-2V5a1 1 0 100-2H3zm11.707 4.707a1 1 0 00-1.414-1.414L10 9.586 8.707 8.293a1 1 0 00-1.414 0l-2 2a1 1 0 101.414 1.414L8 10.414l1.293 1.293a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\"></path></svg>\n\n                <span className=\"ml-3 text-xl text-white\">Stonks</span>\n            </a>\n            <nav class=\"md:ml-auto md:mr-auto flex flex-wrap items-center text-base justify-center\">\n                <Link to=\"/home\">\n                    <a class=\"mr-5 text-gray-500 hover:text-white\" href=\"/home\">Home</a>\n                </Link>\n                <Link to=\"/pretrained\">\n                    <a class=\"mr-5 text-gray-500 hover:text-white\" href=\"/pretrained\">Pre-Trained</a>\n                </Link>\n                <Link to=\"/request\">\n                    <a class=\"mr-5 text-gray-500 hover:text-white\" href=\"/request\">Request</a>\n                </Link>\n                \n            </nav>\n            <button className=\"inline-flex items-center bg-gray-200 border-0 py-1 px-3 round focus:outline-none hover:bg-gray-300 rounded-lg text-base mt-4 md:mt-0\" onClick={redirect}>Github\n            <svg fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} className=\"w-4 h-4 ml-1\" viewBox=\"0 0 24 24\">\n                <path d=\"M5 12h14M12 5l7 7-7 7\" />\n            </svg>\n            </button>\n        </div>\n    </header>\n\n\n    );\n};\n\nexport default Navbar","import React from 'react'\n\nimport { Line } from \"react-chartjs-2\";\n\nimport {Link} from 'react-router-dom';\n\n\n\nclass ChartCard extends React.Component {\n\n    // constructor(props){\n    //     super(props)\n\n    // }\n\n    render(){\n        return(\n            <>\n                <div className=\"rounded shadow-xl overflow-hidden w-full md:flex\" style={{height:\"330px\"}}>\n                    <div className=\"flex w-full md:w-1/2 px-5 pb-4 pt-8 bg-gray-800 text-white items-center\">\n                        <Line\n                        data={this.props.data}\n                        options={this.props.options}\n                        />\n                    </div>\n                    <div className=\"flex w-full md:w-1/2 p-10 bg-gray-800 text-gray-600 items-center\">\n                        <div className=\"w-full\">\n                            <h3 className=\"text-lg font-semibold leading-tight text-gray-100\" > {this.props.name} </h3>\n                            <h6 className=\"text-sm leading-tight mb-2 text-gray-100\"><span>{this.props.symbol} </span>&nbsp;&nbsp;-&nbsp;&nbsp;May 5th 2019</h6>\n                            <div className=\"flex w-full items-end mb-6\">\n                            <span className=\"block leading-none text-3xl text-gray-100\" >  {this.props.price} </span>\n                            <span className=\"block leading-5 text-sm ml-4 text-green-500\" />\n                            </div>\n                            <div className=\"flex w-full text-xs\">\n                            <div className=\"flex w-5/12\">\n                                <div className=\"flex-1 pr-3 text-left font-semibold text-gray-100\">Open</div>\n                                <div className=\"flex-1 px-3 text-right text-gray-100\">0</div>\n                            </div>\n                            <div className=\"flex w-7/12\">\n                                <div className=\"flex-1 px-3 text-left font-semibold text-gray-100\">Market Cap</div>\n                                <div className=\"flex-1 pl-3 text-right text-gray-100\">0</div>\n                            </div>\n                            </div>\n                            <div className=\"flex w-full text-xs\">\n                            <div className=\"flex w-5/12\">\n                                <div className=\"flex-1 pr-3 text-left font-semibold text-gray-100\">High</div>\n                                <div className=\"px-3 text-right text-gray-100\" >0</div>\n                            </div>\n                            <div className=\"flex w-7/12\">\n                                <div className=\"flex-1 px-3 text-left font-semibold text-gray-100\">P/E ratio</div>\n                                <div className=\"pl-3 text-right text-gray-100\">0</div>\n                            </div>\n                            </div>\n                            <div className=\"flex w-full text-xs\">\n                            <div className=\"flex w-5/12\">\n                                <div className=\"flex-1 pr-3 text-left font-semibold text-gray-100\">Low</div>\n                                <div className=\"px-3 text-right text-gray-100\">0</div>\n                            </div>\n                            <div className=\"flex w-7/12\">\n                                <div className=\"flex-1 px-3 text-left font-semibold text-gray-100\">Dividend yield</div>\n                                <div className=\"pl-3 text-right text-gray-100\">0%</div>\n                            </div>\n                            </div>\n                            <div className=\"pl-64 ml-24 pt-12\">\n                                <Link to={`/details/${this.props.symbol}`}>\n                                <button className=\"inline-flex items-center bg-green-500 text-white font-extrabold border-0 py-1 px-3 round focus:outline-none hover:bg-green-700  rounded-lg text-base mt-4 md:mt-0\">Learn More\n                                    <svg fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} className=\"w-4 h-4 ml-1\" viewBox=\"0 0 24 24\">\n                                        <path d=\"M5 12h14M12 5l7 7-7 7\" />\n                                    </svg>\n                                </button>\n                                </Link>\n                                \n                            </div>\n                        </div>\n                        \n                    </div>\n                    \n                </div>\n            </>\n        )\n    }\n}\n\nexport default ChartCard","import React from \"react\";\n\nimport ChartCard from './ChartCard'\n\nimport{\n  AxisBankChart,\n  AxisCurrPrice\n} from '../variables/AxisTrainedCharts.js'\nimport{\n  ICICIBankChart,\n  ICICICurrPrice\n} from '../variables/ICICITrainedChart.js'\nimport{\n  KotakBankChart,\n  KotakCurrPrice\n} from '../variables/KotakTrainedChart.js'\nimport{\n  JindalBankChart,\n  JindalCurrPrice\n} from '../variables/JindalTrainedChart.js'\nimport{\n  JSWBankChart,\n  JSWCurrPrice\n} from '../variables/JSWTrainedChart.js'\nimport{\n  TATASTEELChart,\n  TATASTEELCurrPrice\n} from '../variables/TATASTEELTrainedChart.js'\nimport{\n  JMTSTEELChart,\n  JMTCurrPrice\n} from '../variables/JMTTrainedChart.js'\nimport{\n  MarutiChart,\n  MarutiCurrPrice\n} from '../variables/MarutiTrainedChart.js'\nimport{\n  TATAMOTORSChart,\n  TATAMOTORSCurrPrice\n} from '../variables/TATAMOTORSTrainedChart.js'\n\n\n\n\n\n\n\nconst Tabs = ({ color }) => {\n  const [openTab, setOpenTab] = React.useState(1);\n\n  \n  return (\n    <>\n      <div className=\"flex flex-wrap\">\n        <div className=\"w-full\">\n          <ul\n            className=\"flex mb-0 list-none flex-wrap pt-3 pb-4 flex-row\"\n            role=\"tablist\"\n          >\n            <li className=\"-mb-px mr-2 last:mr-0 flex-auto text-center\">\n              <a\n                className={\n                  \"text-xs font-bold uppercase px-5 py-3 shadow-lg rounded-lg block leading-normal \" +\n                  (openTab === 1\n                    ? \"text-white bg-\" + color + \"-700\"\n                    : \"text-white bg-gray-800\")\n                }\n                onClick={e => {\n                  e.preventDefault();\n                  setOpenTab(1);\n                }}\n                data-toggle=\"tab\"\n                href=\"#link1\"\n                role=\"tablist\"\n              >\n                Banking\n              </a>\n            </li>\n            <li className=\"-mb-px mr-2 last:mr-0 flex-auto text-center\">\n              <a\n                className={\n                  \"text-xs font-bold uppercase px-5 py-3 shadow-lg rounded-lg block leading-normal \" +\n                  (openTab === 2\n                    ? \"text-white bg-\" + color + \"-700\"\n                    : \"text-white bg-gray-800\")\n                }\n                onClick={e => {\n                  e.preventDefault();\n                  setOpenTab(2);\n                }}\n                data-toggle=\"tab\"\n                href=\"#link2\"\n                role=\"tablist\"\n              >\n                 Steel and Manufacturing\n              </a>\n            </li>\n            <li className=\"-mb-px mr-2 last:mr-0 flex-auto text-center\">\n              <a\n                className={\n                  \"text-xs font-bold uppercase px-5 py-3 shadow-lg rounded-lg block leading-normal \" +\n                  (openTab === 3\n                    ? \"text-white bg-\" + color + \"-700\"\n                    : \"text-white bg-gray-800\")\n                }\n                onClick={e => {\n                  e.preventDefault();\n                  setOpenTab(3);\n                }}\n                data-toggle=\"tab\"\n                href=\"#link3\"\n                role=\"tablist\"\n              >\n                 Automotive\n              </a>\n            </li>\n          </ul>\n          \n          <div className=\"relative flex flex-col min-w-0 break-words  w-full mb-6 rounded-lg \">\n            <div className=\"px-4 py-5 flex-auto\">\n              <div className=\"tab-content tab-space\">\n                <div className={openTab === 1 ? \"block\" : \"hidden\"} id=\"link1\">\n\n                  <center>\n                    <div className=\"row pt-1 pb-3\"> \n                        <ChartCard data={AxisBankChart.data} options={AxisBankChart.options} name=\"Axis Bank\" symbol=\"AXISBANK\" price={AxisCurrPrice} />\n                    </div>\n                    <div className=\"row py-3\"> \n                        <ChartCard data={ICICIBankChart.data} options={ICICIBankChart.options} name=\"ICICI Bank\" symbol=\"ICICIBANK\" price={ICICICurrPrice} />\n                    </div>\n                    <div className=\"row py-3\"> \n                        <ChartCard data={KotakBankChart.data} options={KotakBankChart.options} name=\"Kotak Mahindra Bank\" symbol=\"KOTAKBANK\" price={KotakCurrPrice} />\n                    </div>\n                  </center>\n                  \n                </div>\n                <div className={openTab === 2 ? \"block\" : \"hidden\"} id=\"link2\">\n\n                  <center>\n                    <div className=\"row pt-1 pb-3\"> \n                        <ChartCard data={JindalBankChart.data} options={JindalBankChart.options} name=\"Jindal Steel and Power\" symbol=\"JINDALSTEL\" price={JindalCurrPrice}/>\n                    </div>\n                    <div className=\"row py-3\"> \n                        <ChartCard data={JSWBankChart.data} options={JSWBankChart.options} name=\"JSW Steel\" symbol=\"JSWSTEEL\" price={JSWCurrPrice}/>\n                    </div>\n                    <div className=\"row py-3\"> \n                        <ChartCard data={TATASTEELChart.data} options={TATASTEELChart.options} name=\"Tata Steel Ltd.\" symbol=\"TATASTEEL\" price={TATASTEELCurrPrice}/>\n                    </div>\n                  </center>\n\n                </div>\n                <div className={openTab === 3 ? \"block\" : \"hidden\"} id=\"link3\">\n                    <center>\n                      <div className=\"row pt-1 pb-3\"> \n                          <ChartCard data={JMTSTEELChart.data} options={JMTSTEELChart.options} name=\"Jmt Auto\" symbol=\"JMTAUTOLTD\"  price={JMTCurrPrice} />\n                      </div>\n                      <div className=\"row py-3\"> \n                          <ChartCard data={MarutiChart.data} options={MarutiChart.options} name=\"Maruti Suzuki\" symbol=\"MARUTI\" price={MarutiCurrPrice} />\n                      </div>\n                      <div className=\"row py-3\"> \n                          <ChartCard data={TATAMOTORSChart.data} options={TATAMOTORSChart.options} name=\"Tata Motors\" symbol=\"TATAMOTORS\" price={TATAMOTORSCurrPrice} />\n                      </div>\n                    </center>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default function PreTrainedCharts() {\n  return (\n    <>\n      <div className=\"container\">\n        <Tabs color=\"blue\" />\n      </div>\n      \n    </>\n  );\n}","import React from 'react'\n\nimport PreTrainedCharts from '../components/PreTrainedCharts'\n\n\nconst MainLayout = () => {\n    return(\n        <div className=\"container mx-auto flex flex-wrap p-5 flex-col md:flex-row items-center\">\n            <h2 className=\"text-3xl text-white pb-1 font-bold\">\n                PreTrained Models :-\n            </h2>\n            <PreTrainedCharts />\n            \n        </div>\n\n    )\n        \n}\n\nexport default MainLayout;","import React from 'react'\nimport Img1 from '../assets/img/homepage.svg'\n\n\n\n\nconst HomePage = () => {\n    return(\n        <>\n            <section className=\"text-gray-500 body-font bg-gray-900\">\n                <div className=\"container flex flex-wrap px-5 py-24 mx-auto items-center\">\n                    <div className=\"md:w-1/2 md:pr-12 md:py-8 md:border-r md:border-b-0 md:mb-0 mb-10 pb-10 border-b border-gray-800\">\n                    <h1 className=\"sm:text-3xl text-2xl font-medium title-font mb-2 text-white\">We know the stonks, You'll know them too!!</h1>\n                    <p className=\"leading-relaxed text-base\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Sequi reiciendis, cumque sunt alias, aliquam quas tempore aut repellendus omnis molestiae, consectetur iusto. A repellendus dignissimos fuga rem velit porro id!</p>\n                    <a className=\"text-blue-500 inline-flex items-center mt-4\" href=\"/\">Learn More\n                        <svg fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} className=\"w-4 h-4 ml-2\" viewBox=\"0 0 24 24\">\n                        <path d=\"M5 12h14M12 5l7 7-7 7\" />\n                        </svg>\n                    </a>\n                    </div>\n                    <div className=\"flex flex-col md:w-1/2 md:pl-12\">\n                    <h2 className=\"title-font font-medium text-white tracking-widest text-sm mb-3\">&nbsp;</h2>\n                        <div className=\"bg-gray-700 p-20 rounded-full\">\n                            <img src={Img1} alt=\"homepage\" style={{ width: \"90%\" }}/>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <section className=\"text-gray-500 bg-gray-900 body-font\">\n                <div className=\"container px-5 py-24 mx-auto\">\n                    <div className=\"flex flex-col text-center w-full mb-20\">\n                    <h1 className=\"text-2xl font-medium title-font mb-4 text-white tracking-widest\">OUR TEAM</h1>\n                    <p className=\"lg:w-2/3 mx-auto leading-relaxed text-base\">Whatever cardigan tote bag tumblr hexagon brooklyn asymmetrical gentrify, subway tile poke farm-to-table. Franzen you probably haven't heard of them.</p>\n                    </div>\n                    <div className=\"flex flex-wrap -m-4\">\n                    <div className=\"p-4 lg:w-1/2\">\n                        <div className=\"h-full flex sm:flex-row flex-col items-center sm:justify-start justify-center text-center sm:text-left\">\n                        <img alt=\"team\" className=\"flex-shrink-0 rounded-lg w-48 h-48 object-cover object-center sm:mb-0 mb-4\" src=\"https://dummyimage.com/200x200\" />\n                        <div className=\"flex-grow sm:pl-8\">\n                            <h2 className=\"title-font font-medium text-lg text-white\">Karan Nandwani</h2>\n                            <h3 className=\"text-gray-600 mb-3\">Leader and Web Dev</h3>\n                            <p className=\"mb-4\">DIY tote bag drinking vinegar cronut adaptogen squid fanny pack vaporware.</p>\n                            <span className=\"inline-flex\">\n                            <a className=\"text-gray-700\" href=\"/home\">\n                                <svg fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\n                                <path d=\"M18 2h-3a5 5 0 00-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 011-1h3z\" />\n                                </svg>\n                            </a>\n                            <a className=\"ml-2 text-gray-700\" href=\"/home\">\n                                <svg fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\n                                <path d=\"M23 3a10.9 10.9 0 01-3.14 1.53 4.48 4.48 0 00-7.86 3v1A10.66 10.66 0 013 4s-4 9 5 13a11.64 11.64 0 01-7 2c9 5 20 0 20-11.5a4.5 4.5 0 00-.08-.83A7.72 7.72 0 0023 3z\" />\n                                </svg>\n                            </a>\n                            <a className=\"ml-2 text-gray-700\" href=\"/home\">\n                                <svg fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\n                                <path d=\"M21 11.5a8.38 8.38 0 01-.9 3.8 8.5 8.5 0 01-7.6 4.7 8.38 8.38 0 01-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 01-.9-3.8 8.5 8.5 0 014.7-7.6 8.38 8.38 0 013.8-.9h.5a8.48 8.48 0 018 8v.5z\" />\n                                </svg>\n                            </a>\n                            </span>\n                        </div>\n                        </div>\n                    </div>\n                    <div className=\"p-4 lg:w-1/2\">\n                        <div className=\"h-full flex sm:flex-row flex-col items-center sm:justify-start justify-center text-center sm:text-left\">\n                        <img alt=\"team\" className=\"flex-shrink-0 rounded-lg w-48 h-48 object-cover object-center sm:mb-0 mb-4\" src=\"https://dummyimage.com/201x201\" />\n                        <div className=\"flex-grow sm:pl-8\">\n                            <h2 className=\"title-font font-medium text-lg text-white\">Arshit Kumar</h2>\n                            <h3 className=\"text-gray-600 mb-3\">Data and ML</h3>\n                            <p className=\"mb-4\">DIY tote bag drinking vinegar cronut adaptogen squid fanny pack vaporware.</p>\n                            <span className=\"inline-flex\">\n                            <a className=\"text-gray-700\" href=\"/home\">\n                                <svg fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\n                                <path d=\"M18 2h-3a5 5 0 00-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 011-1h3z\" />\n                                </svg>\n                            </a>\n                            <a className=\"ml-2 text-gray-700\" href=\"/home\">\n                                <svg fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\n                                <path d=\"M23 3a10.9 10.9 0 01-3.14 1.53 4.48 4.48 0 00-7.86 3v1A10.66 10.66 0 013 4s-4 9 5 13a11.64 11.64 0 01-7 2c9 5 20 0 20-11.5a4.5 4.5 0 00-.08-.83A7.72 7.72 0 0023 3z\" />\n                                </svg>\n                            </a>\n                            <a className=\"ml-2 text-gray-700\" href=\"/home\">\n                                <svg fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\n                                <path d=\"M21 11.5a8.38 8.38 0 01-.9 3.8 8.5 8.5 0 01-7.6 4.7 8.38 8.38 0 01-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 01-.9-3.8 8.5 8.5 0 014.7-7.6 8.38 8.38 0 013.8-.9h.5a8.48 8.48 0 018 8v.5z\" />\n                                </svg>\n                            </a>\n                            </span>\n                        </div>\n                        </div>\n                    </div>\n                    <div className=\"p-4 lg:w-1/2\">\n                        <div className=\"h-full flex sm:flex-row flex-col items-center sm:justify-start justify-center text-center sm:text-left\">\n                        <img alt=\"team\" className=\"flex-shrink-0 rounded-lg w-48 h-48 object-cover object-center sm:mb-0 mb-4\" src=\"https://dummyimage.com/204x204\" />\n                        <div className=\"flex-grow sm:pl-8\">\n                            <h2 className=\"title-font font-medium text-lg text-white\">Aman Ojha</h2>\n                            <h3 className=\"text-gray-600 mb-3\">Data and ML</h3>\n                            <p className=\"mb-4\">DIY tote bag drinking vinegar cronut adaptogen squid fanny pack vaporware.</p>\n                            <span className=\"inline-flex\">\n                            <a className=\"text-gray-700\" href=\"/home\">\n                                <svg fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\n                                <path d=\"M18 2h-3a5 5 0 00-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 011-1h3z\" />\n                                </svg>\n                            </a>\n                            <a className=\"ml-2 text-gray-700\" href=\"/home\">\n                                <svg fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\n                                <path d=\"M23 3a10.9 10.9 0 01-3.14 1.53 4.48 4.48 0 00-7.86 3v1A10.66 10.66 0 013 4s-4 9 5 13a11.64 11.64 0 01-7 2c9 5 20 0 20-11.5a4.5 4.5 0 00-.08-.83A7.72 7.72 0 0023 3z\" />\n                                </svg>\n                            </a>\n                            <a className=\"ml-2 text-gray-700\" href=\"/home\">\n                                <svg fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\n                                <path d=\"M21 11.5a8.38 8.38 0 01-.9 3.8 8.5 8.5 0 01-7.6 4.7 8.38 8.38 0 01-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 01-.9-3.8 8.5 8.5 0 014.7-7.6 8.38 8.38 0 013.8-.9h.5a8.48 8.48 0 018 8v.5z\" />\n                                </svg>\n                            </a>\n                            </span>\n                        </div>\n                        </div>\n                    </div>\n                    <div className=\"p-4 lg:w-1/2\">\n                        <div className=\"h-full flex sm:flex-row flex-col items-center sm:justify-start justify-center text-center sm:text-left\">\n                        <img alt=\"team\" className=\"flex-shrink-0 rounded-lg w-48 h-48 object-cover object-center sm:mb-0 mb-4\" src=\"https://dummyimage.com/206x206\" />\n                        <div className=\"flex-grow sm:pl-8\">\n                            <h2 className=\"title-font font-medium text-lg text-white\">Shobit Puri</h2>\n                            <h3 className=\"text-gray-600 mb-3\">Web Dev</h3>\n                            <p className=\"mb-4\">DIY tote bag drinking vinegar cronut adaptogen squid fanny pack vaporware.</p>\n                            <span className=\"inline-flex\">\n                            <a className=\"text-gray-700\" href=\"/home\">\n                                <svg fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\n                                <path d=\"M18 2h-3a5 5 0 00-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 011-1h3z\" />\n                                </svg>\n                            </a>\n                            <a className=\"ml-2 text-gray-700\" href=\"/home\">\n                                <svg fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\n                                <path d=\"M23 3a10.9 10.9 0 01-3.14 1.53 4.48 4.48 0 00-7.86 3v1A10.66 10.66 0 013 4s-4 9 5 13a11.64 11.64 0 01-7 2c9 5 20 0 20-11.5a4.5 4.5 0 00-.08-.83A7.72 7.72 0 0023 3z\" />\n                                </svg>\n                            </a>\n                            <a className=\"ml-2 text-gray-700\" href=\"/home\">\n                                <svg fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\n                                <path d=\"M21 11.5a8.38 8.38 0 01-.9 3.8 8.5 8.5 0 01-7.6 4.7 8.38 8.38 0 01-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 01-.9-3.8 8.5 8.5 0 014.7-7.6 8.38 8.38 0 013.8-.9h.5a8.48 8.48 0 018 8v.5z\" />\n                                </svg>\n                            </a>\n                            </span>\n                        </div>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n            </section>\n\n        </>\n    )\n        \n}\n\nexport default HomePage;","import React,{ Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport DummyData from '../variables/dummydata.json'\n\nexport class SearchBar extends Component {\n    \n    static propTypes = {\n        suggestions: PropTypes.instanceOf(Array).isRequired\n    };\n\n    state = {\n        activeOption: 0,\n        filteredOptions: [],\n        showOptions: false,\n        userInput: ''\n      };\n\n    onChange = (e) => {\n        console.log('onChanges');\n\n        var suggestions = [];\n\n        suggestions = DummyData[\"data\"].map(function(name){\n          return name[\"Name\"]\n        })\n\n\n        // const { suggestions } = this.props;\n        const userInput = e.currentTarget.value;\n\n        const filteredOptions = suggestions.filter(\n            (optionName) =>\n            optionName.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n        );\n\n        this.setState({\n            activeOption: 0,\n            filteredOptions,\n            showOptions: true,\n            userInput: e.currentTarget.value\n        });\n    };\n\n    onClick = (e) => {\n        this.setState({\n          activeOption: 0,\n          filteredOptions: [],\n          showOptions: false,\n          userInput: e.currentTarget.innerText\n        });\n    };\n\n    onKeyDown = (e) => {\n        const { activeOption, filteredOptions } = this.state;\n    \n        if (e.keyCode === 13) {\n          this.setState({\n            activeOption: 0,\n            showOptions: false,\n            userInput: filteredOptions[activeOption]\n          });\n        } else if (e.keyCode === 38) {\n          if (activeOption === 0) {\n            return;\n          }\n          this.setState({ activeOption: activeOption - 1 });\n        } else if (e.keyCode === 40) {\n          if (activeOption === filteredOptions.length - 1) {\n            console.log(activeOption);\n            return;\n          }\n          this.setState({ activeOption: activeOption + 1 });\n        }\n    };\n\n    render() {\n\n        const {\n            onChange,\n            onClick,\n            onKeyDown,\n            state: { activeOption, filteredOptions, showOptions, userInput }\n          } = this;\n\n         let suggestionList;\n         \n         if (showOptions && userInput) {\n            if (filteredOptions.length) {\n              \n              suggestionList = (\n                <ul className=\"options\">\n                  {filteredOptions.map((optionName, index) => {\n                    let className;\n                    if (index === activeOption) {\n                      //className = 'option-active';\n                      className = \"border-4 border-white p-6 bg-gray-800 rounded-lg w-9/12\";\n                    }\n                    else{\n                        className= \"border border-gray-800 p-6 bg-gray-800 rounded-lg w-9/12\"\n                    }\n                    return (\n                        <div className=\"text-white bg-gray-900 body-font \">\n                            <center>\n                                <div className=\"container mx-auto p-5 flex-col md:flex-row items-center\">\n                                    <div className=\"flex flex-wrap -m-6\">\n                                        <div className=\"xl:w-full md:w-full p-4\">\n                                            <div className={className} onClick={onClick}>\n                                                <center>\n                                                    <div className=\"w-12 h-12 inline-flex items-center justify-center rounded-full bg-gray-700 text-blue-400 mb-4\">\n                                                        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z\" /></svg>\n                                                    </div>\n                                                    <h2 className=\"text-lg text-white text-2xl font-medium title-font \">\n                                                        <li key={optionName}>\n                                                            {optionName}\n                                                        </li>\n                                                    </h2>\n                                                    <p className=\"leading-relaxed text-base\"></p>\n                                                </center>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    \n                                </div>\n                            </center>\n                        </div>\n                    );\n                  })}\n                </ul>\n              );\n              \n            } else {\n              suggestionList = (\n                <div className=\"no-options text-white text-4xl font-medium title-font text-center\">\n                  No Results...\n                </div>\n              );\n            }\n          }\n\n        return (\n            <React.Fragment>\n                <div className=\"container mx-auto p-5 flex-col md:flex-row items-center\">\n                    <div className=\"px-4 sm:px-8 lg:px-16 xl:px-20 mx-auto mb-6\">\n                        {/* hero */}\n                        <div className=\"hero\">\n                            <div className=\"box pt-6\">\n                                <div className=\"box-wrapper\">\n                                    <div className=\" bg-white rounded flex items-center w-full p-3 shadow-sm border border-gray-200\">\n                                        <button type=\"submit\" className=\"outline-none focus:outline-none\"><svg className=\" w-5 text-gray-600 h-5 cursor-pointer\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg></button>\n                                        <input \n                                            type=\"text\"\n                                            placeholder=\"Type to Search...\" \n                                            onChange={onChange}\n                                            onKeyDown={onKeyDown}\n                                            value={userInput}\n                                            x-model=\"q\" \n                                            className=\"w-full h-10 rounded-full pl-4 text-md outline-none focus:outline-none bg-transparent search-box\" \n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    {suggestionList}\n                </div>\n            </React.Fragment>\n    \n    \n        );\n    }\n}\n\nexport default SearchBar;","import React from 'react'\nimport SearchBar from '../components/SearchBar'\n\n\n\nconst HomePage = () => {\n\n    \n\n    return(\n        <div className=\"container mx-auto flex flex-wrap p-5 flex-col md:flex-row items-center\">\n            <h2 className=\"text-3xl text-white pb-1 font-bold pl-6\">\n                Request for a new prediction.\n            </h2>\n            <SearchBar />\n        </div>\n\n    )\n        \n}\n\nexport default HomePage;","import{\n    AxisBankChart,\n    AxisBankChart2,\n    AxisCurrPrice\n  } from '../variables/AxisTrainedCharts.js'\n  import{\n    ICICIBankChart,\n    ICICIBankChart2,\n    ICICICurrPrice\n  } from '../variables/ICICITrainedChart.js'\n  import{\n    KotakBankChart,\n    KotakBankChart2,\n    KotakCurrPrice\n  } from '../variables/KotakTrainedChart.js'\n  import{\n    JindalBankChart,\n    JindalBankChart2,\n    JindalCurrPrice\n  } from '../variables/JindalTrainedChart.js'\n  import{\n    JSWBankChart,\n    JSWBankChart2,\n    JSWCurrPrice\n  } from '../variables/JSWTrainedChart.js'\n  import{\n    TATASTEELChart,\n    TATASTEEKBankChart2,\n    TATASTEELCurrPrice\n  } from '../variables/TATASTEELTrainedChart.js'\n  import{\n    JMTSTEELChart,\n    JMTSTEELChart2,\n    JMTCurrPrice\n  } from '../variables/JMTTrainedChart.js'\n  import{\n    MarutiChart,\n    MarutiChart2,\n    MarutiCurrPrice\n  } from '../variables/MarutiTrainedChart.js'\n  import{\n    TATAMOTORSChart,\n    TATAMOTORSChart2,\n    TATAMOTORSCurrPrice\n  } from '../variables/TATAMOTORSTrainedChart.js'\n  \nconst sampleData = [\n    {\n        name : \"Axis Bank\",\n        symbol:'AXISBANK',\n        chart1: AxisBankChart,\n        chart2: AxisBankChart2,\n        currPrice: AxisCurrPrice\n    },\n    {\n        name : \"ICICI Bank\",\n        symbol:'ICICIBANK',\n        chart1: ICICIBankChart,\n        chart2: ICICIBankChart2,\n        currPrice: ICICICurrPrice\n    },\n    {\n        name : \"Kotak Mahindra Bank\",\n        symbol:'KOTAKBANK',\n        chart1: KotakBankChart,\n        chart2: KotakBankChart2,\n        currPrice: KotakCurrPrice\n    },\n    {\n        name : \"Jindal Steel and Power\",\n        symbol:'JINDALSTEL',\n        chart1: JindalBankChart,\n        chart2: JindalBankChart2,\n        currPrice: JindalCurrPrice\n    },\n    {\n        name : \"JSW Steel\",\n        symbol:'JSWSTEEL',\n        chart1: JSWBankChart,\n        chart2: JSWBankChart2,\n        currPrice: JSWCurrPrice\n    },\n    {\n        name : \"Tata Steel Ltd.\",\n        symbol:'TATASTEEL',\n        chart1: TATASTEELChart,\n        chart2: TATASTEEKBankChart2,\n        currPrice: TATASTEELCurrPrice\n    },\n    {\n        name : \"Jmt Auto\",\n        symbol:'JMTAUTOLTD',\n        chart1: JMTSTEELChart,\n        chart2: JMTSTEELChart2,\n        currPrice: JMTCurrPrice\n    },\n    {\n        name : \"Maruti Suzuki\",\n        symbol:'MARUTI',\n        chart1: MarutiChart,\n        chart2: MarutiChart2,\n        currPrice: MarutiCurrPrice\n    },\n    {\n        name : \"Tata Motors\",\n        symbol:'TATAMOTORS',\n        chart1: TATAMOTORSChart,\n        chart2: TATAMOTORSChart2,\n        currPrice: TATAMOTORSCurrPrice\n    },\n    \n]\n\nexport default sampleData","import React, {useState} from 'react'\n\nimport sampleData from '../variables/sampleData.js'\nimport { Line } from \"react-chartjs-2\";\nimport { useParams } from 'react-router-dom';\n\n\nconst DetailsPage = (props) => {\n\n    const {symbol} = useParams();\n    const index = sampleData.findIndex(object => object.symbol===symbol)\n    const [state] = useState({\n        chart1data: sampleData[index].chart1.data,\n        chart1options: sampleData[index].chart1.options,\n        chart2data: sampleData[index].chart2.data,\n        chart2options: sampleData[index].chart2.options,\n        currPrice: sampleData[index].currPrice,\n        name: sampleData[index].name\n    })\n    \n\n    return(\n        <>\n           <section className=\"text-gray-500 bg-gray-900 body-font\">\n                <div className=\"container px-5 py-24 mx-auto flex flex-wrap\">\n                    <div className=\"flex flex-col text-center w-full mb-12\">\n                        <h2 className=\"text-xs text-blue-500 tracking-widest font-medium title-font mb-1\">DETAILED RESULTS OF</h2>\n                        <h1 className=\" text-4xl font-medium title-font text-white\"> {state.name} </h1>\n                    </div>\n                    \n                    <div className=\"row container\">\n                        <center>\n                            <div class=\" md:w-1/2 \">\n                                <div class=\"flex rounded-lg h-full bg-gray-800 p-8 flex-col\">\n                                <div class=\"flex items-center mb-3\">\n                                    <div class=\"w-8 h-8 mr-3 inline-flex items-center justify-center rounded-full bg-blue-500 text-white flex-shrink-0\">\n                                        <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" /></svg>\n                                    </div>\n                                    <h2 class=\"text-white text-lg title-font font-medium\">Additional Information</h2>\n                                </div>\n                                <div class=\"flex-grow\">\n                                    <h3 className=\"text-lg text-left  font-semibold leading-tight mt-3 text-gray-100\" > {state.name} </h3>\n                                    <h6 className=\"text-sm leading-tight mb-2 text-gray-100 text-left \"><span>{symbol} </span>&nbsp;&nbsp;|&nbsp;&nbsp;May 5th 2019</h6>\n                                    <div className=\"flex w-full items-end mb-6\">\n                                    <span className=\"block leading-none text-3xl text-gray-100\" >  {state.currPrice} </span>\n                                    <span className=\"block leading-5 text-sm ml-4 text-green-500\" />\n                                    </div>\n                                    <div className=\"flex w-full text-xs\">\n                                    <div className=\"flex w-5/12\">\n                                        <div className=\"flex-1 pr-3 text-left font-semibold text-gray-100\">Open</div>\n                                        <div className=\"flex-1 px-3 text-right text-gray-100\">0</div>\n                                    </div>\n                                    <div className=\"flex w-7/12\">\n                                        <div className=\"flex-1 px-3 text-left font-semibold text-gray-100\">Market Cap</div>\n                                        <div className=\"flex-1 pl-3 text-right text-gray-100\">0</div>\n                                    </div>\n                                    </div>\n                                    <div className=\"flex w-full text-xs\">\n                                    <div className=\"flex w-5/12\">\n                                        <div className=\"flex-1 pr-3 text-left font-semibold text-gray-100\">High</div>\n                                        <div className=\"px-3 text-right text-gray-100\" >0</div>\n                                    </div>\n                                    <div className=\"flex w-7/12\">\n                                        <div className=\"flex-1 px-3 text-left font-semibold text-gray-100\">P/E ratio</div>\n                                        <div className=\"pl-3 text-right text-gray-100\">0</div>\n                                    </div>\n                                    </div>\n                                    <div className=\"flex w-full text-xs\">\n                                    <div className=\"flex w-5/12\">\n                                        <div className=\"flex-1 pr-3 text-left font-semibold text-gray-100\">Low</div>\n                                        <div className=\"px-3 text-right text-gray-100\">0</div>\n                                    </div>\n                                    <div className=\"flex w-7/12\">\n                                        <div className=\"flex-1 px-3 text-left font-semibold text-gray-100\">Dividend yield</div>\n                                        <div className=\"pl-3 text-right text-gray-100\">0%</div>\n                                    </div>\n                                    </div>\n                                </div>\n                                </div>\n                            </div>\n                        </center>\n                    </div>\n\n                    <div className=\"row container  mt-8\" >\n                        <center>\n                            <div class=\" md:w-full \">\n                                <div class=\"flex rounded-lg h-full bg-gray-800 p-8 flex-col\">\n                                    <div class=\"flex items-center mb-3\">\n                                        <div class=\"w-8 h-8 mr-3 inline-flex items-center justify-center rounded-full bg-blue-500 text-white flex-shrink-0\">\n                                        <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fillRule=\"evenodd\" d=\"M3 3a1 1 0 000 2v8a2 2 0 002 2h2.586l-1.293 1.293a1 1 0 101.414 1.414L10 15.414l2.293 2.293a1 1 0 001.414-1.414L12.414 15H15a2 2 0 002-2V5a1 1 0 100-2H3zm11.707 4.707a1 1 0 00-1.414-1.414L10 9.586 8.707 8.293a1 1 0 00-1.414 0l-2 2a1 1 0 101.414 1.414L8 10.414l1.293 1.293a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" /></svg>\n                                        </div>\n                                        <h2 class=\"text-white text-lg title-font font-medium\">Past Trends</h2>\n                                    </div>\n                                    <div class=\"flex-grow\">    \n                                        <div className=\"flex w-full  px-5 pb-4 pt-8 bg-gray-800 text-white items-center\" style={{ height:\"350px\" }}>\n                                            <Line\n                                                data={state.chart1data}\n                                                options={state.chart1options}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </center>\n                    </div>\n                    <div className=\"row container w-1/2 mt-8\">\n                        <center>\n                            <div class=\" md:w-full \">\n                                <div class=\"flex rounded-lg h-full bg-gray-800 p-8 flex-col\">\n                                    <div class=\"flex items-center mb-3\">\n                                        <div class=\"w-8 h-8 mr-3 inline-flex items-center justify-center rounded-full bg-blue-500 text-white flex-shrink-0\">\n                                        <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fillRule=\"evenodd\" d=\"M3 3a1 1 0 000 2v8a2 2 0 002 2h2.586l-1.293 1.293a1 1 0 101.414 1.414L10 15.414l2.293 2.293a1 1 0 001.414-1.414L12.414 15H15a2 2 0 002-2V5a1 1 0 100-2H3zm11.707 4.707a1 1 0 00-1.414-1.414L10 9.586 8.707 8.293a1 1 0 00-1.414 0l-2 2a1 1 0 101.414 1.414L8 10.414l1.293 1.293a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" /></svg>\n                                        </div>\n                                        <h2 class=\"text-white text-lg title-font font-medium\">Forcast</h2>\n                                    </div>\n                                    <div class=\"flex-grow\">    \n                                        <div className=\"flex w-full  px-5 pb-4 pt-8 bg-gray-800 text-white items-center\" style={{ height:\"350px\" }}>\n                                            <Line\n                                                data={state.chart2data}\n                                                options={state.chart2options}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </center>\n                    </div>\n                    \n                    \n                    \n                </div>\n            </section>\n\n            \n            \n\n\n        </>\n    )\n        \n}\n\nexport default DetailsPage;","import React from 'react';\nimport {BrowserRouter, Route, Switch, Redirect} from 'react-router-dom'\nimport Navbar from './components/Navbar'\nimport MainLayout from './views/MainLayout'\nimport HomePage from './views/Homepage'\nimport RequestPage from './views/Requestpage'\nimport DetailsPage from './views/DetailsPage'\n\nfunction App() {\n  return (\n\n    <BrowserRouter basename={`${process.env.PUBLIC_URL}/`}>\n      <Navbar />\n      <Switch>\n          <Route path=\"/home\" render={props =><HomePage {...props} />} />\n          <Route path=\"/pretrained\" render={props => <MainLayout {...props} />} />\n          <Route path=\"/request\" render={props => <RequestPage {...props} />} />\n          <Route \n            exact\n            path=\"/details/:symbol\"\n            render={props => <DetailsPage {...props} />} \n          />\n          \n          <Redirect from=\"/\" to=\"/home\" />\n      </Switch>\n    </BrowserRouter>\n      \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/homepage.c8922d96.svg\";","var AxisBankJson = require('./AXIS_1year.json');\nvar AxisPredJson = require('./pred/axis_pred.json');\n\n var color1Data = AxisPredJson[\"values\"].slice(0,11);\n// color1Data.push(NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,)\n var color2Data = AxisPredJson[\"values\"].slice(10,20);\n color2Data.unshift(NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN);\n\nvar AxisBankDates = AxisBankJson.map(function(object){\n    return object[\"Date\"]\n    \n})\n\nvar AxisBankAverage = AxisBankJson.map(function(object){\n    return Math.round(object[\"Average\"]*100)/100\n    \n})\n\n\n\n  console.log(AxisBankAverage)\n\n  const AxisBankChart2 = {\n    data: canvas => {\n      let ctx = canvas.getContext(\"2d\");\n  \n      let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n  \n      gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n      gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n      gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n  \n      return {\n        labels: [\"20 Apr\",\"21 Apr\",\"22 Apr\",\"23 Apr\",\"24 Apr\",\"25 Apr\",\"26 Apr\",\"27 Apr\",\"28 Apr\",\"29 Apr\",\"30 Apr\",\"1 May\",\"2 May\",\"3 May\",\"4 May\",\"5 May\",\"6 May\",\"7 May\",\"8 May\",\"9 May\",],\n        datasets: [\n          {\n            label: \"DataSet Values\",\n            fill: true,\n            backgroundColor: gradientStroke,\n            borderColor: \"#1f8ef1\",\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: \"#1f8ef1\",\n            pointBorderColor: \"rgba(255,255,255,0)\",\n            pointHoverBackgroundColor: \"#1f8ef1\",\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 0,\n            data: color1Data,\n          },\n          {\n            label: \"Predicted Values\",\n            fill: true,\n            backgroundColor: gradientStroke,\n            borderColor: \"#f76d05\",\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: \"#f76d05\",\n            pointBorderColor: \"rgba(247, 109, 5, 1)\",\n            pointHoverBackgroundColor: \"#1f8ef1\",\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 0,\n            data: color2Data\n          }\n        ]\n      };\n    },\n    options: {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        tooltips: {\n          backgroundColor: \"#f5f5f5\",\n          titleFontColor: \"#333\",\n          bodyFontColor: \"#666\",\n          bodySpacing: 4,\n          xPadding: 12,\n          mode: \"nearest\",\n          intersect: 0,\n          position: \"nearest\"\n        },\n        responsive: true,\n        scales: {\n          yAxes: [\n            {\n              barPercentage: 1.6,\n              gridLines: {\n                drawBorder: false,\n                color: \"rgba(29,140,248,0.0)\",\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                suggestedMin: 650,\n                suggestedMax: 780,\n                padding: 20,\n                fontColor: \"#9a9a9a\"\n              }\n            }\n          ],\n          xAxes: [\n            {\n              barPercentage: 1.6,\n              gridLines: {\n                drawBorder: false,\n                color: \"rgba(29,140,248,0.1)\",\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                \n                padding: 20,\n                fontColor: \"#9a9a9a\"\n              }\n            }\n          ]\n        }\n      }\n}\n\n\nconst AxisBankChart = {\n    data: canvas => {\n        let ctx = canvas.getContext(\"2d\");\n\n        let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n        gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\n        gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); \n        gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); \n\n        return{\n            labels: AxisBankDates,\n            datasets: [\n                {\n                  label: \"Axis Bank Average Unit\",\n                  fill: true,\n                  backgroundColor: gradientStroke,\n                  borderColor: \"#00d6b4\",\n                  borderWidth: 2,\n                  borderDash: [],\n                  borderDashOffset: 0.0,\n                  pointBackgroundColor: \"#00d6b4\",\n                  pointBorderColor: \"rgba(255,255,255,0)\",\n                  pointHoverBackgroundColor: \"#00d6b4\",\n                  pointBorderWidth: 1,\n                  pointHoverRadius: 4,\n                  pointHoverBorderWidth: 15,\n                  pointRadius: 0,\n                  data: AxisBankAverage\n                }\n              ]\n        };\n    },\n    options: {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        elements: {\n          point:{\n              radius: 0\n          }\n        },\n        tooltips: {\n          backgroundColor: \"#f5f5f5\",\n          titleFontColor: \"#333\",\n          bodyFontColor: \"#666\",\n          bodySpacing: 4,\n          xPadding: 12,\n          mode: \"nearest\",\n          intersect: 0,\n          position: \"nearest\"\n        },\n        responsive: true,\n        scales: {\n          yAxes: [\n            {\n              barPercentage: 1.6,\n              gridLines: {\n                display:false,\n                // drawBorder: false,\n                // color: \"rgba(29,140,248,0.0)\",\n                // zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                suggestedMin: 400,\n                suggestedMax: 800,\n                padding: 20,\n                fontColor: \"#9e9e9e\"\n              }\n            }\n          ],\n    \n          xAxes: [\n            {\n              barPercentage: 1.6,\n              gridLines: {\n                display: false,\n                // drawBorder: false,\n                // color: \"rgba(0,242,195,0.1)\",\n                // zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                padding: 20,\n                fontColor: \"#9e9e9e\"\n              }\n            }\n          ]\n        }\n      }\n}\n\nconst AxisCurrPrice = Math.round(AxisBankJson[AxisBankJson.length-1][\"Average\"]*100)/100;\n\n\n\n\nmodule.exports = {\n    AxisBankChart,\n    AxisBankChart2,\n    AxisCurrPrice\n};"],"sourceRoot":""}